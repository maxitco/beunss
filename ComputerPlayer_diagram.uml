<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:PapyrusJava="http://www.eclipse.org/papyrus/PapyrusJava/1" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_zGCbcOsWEeaeqLphjcwudA" name="RootElement">
    <packagedElement xmi:type="uml:Package" xmi:id="_fQOSIOsXEeaRPtCCR8m55A" name="ss">
      <packagedElement xmi:type="uml:Package" xmi:id="_fgWY0OsXEeaRPtCCR8m55A" name="ss">
        <packagedElement xmi:type="uml:Package" xmi:id="_fgXm8OsXEeaRPtCCR8m55A" name="project">
          <packagedElement xmi:type="uml:Package" xmi:id="_fgY1EOsXEeaRPtCCR8m55A" name="game"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_qG7V8OsXEeaRPtCCR8m55A" name="client">
            <packagedElement xmi:type="uml:Class" xmi:id="_qG8kEOsXEeaRPtCCR8m55A" name="Hard" visibility="public">
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_qHCDoOsXEeaRPtCCR8m55A" name="implements" client="_qG8kEOsXEeaRPtCCR8m55A" supplier="_qG8kEesXEeaRPtCCR8m55A" contract="_qG8kEesXEeaRPtCCR8m55A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHD40OsXEeaRPtCCR8m55A" name="getName" specification="_qHCqsOsXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    return &quot;hard&quot;;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHMbsesXEeaRPtCCR8m55A" name="determineMove" specification="_qHJYYesXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    ArrayList&lt;Field> moves = this.getMoves(board);
    Map&lt;Field, Integer> result = this.getResultMap(board, m);
    //Choose candidate with highest potential score
    int maxValue = Collections.max(result.values());
    Iterator&lt;Map.Entry&lt;Field, Integer>> it = result.entrySet().iterator();
    while (it.hasNext()) {
        Map.Entry&lt;Field, Integer> item = it.next();
        if (item.getValue().intValue() &lt; maxValue) {
            it.remove();
        }
    }
    it = result.entrySet().iterator();
    int next = (int) (Math.random() * new Double(result.size()));
    int count = 0;
    while (it.hasNext()) {
        Map.Entry&lt;Field, Integer> item = it.next();
        if (count == next) {
            return item.getKey();
        }
        count++;
    }
    return null;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHOQ4OsXEeaRPtCCR8m55A" name="getMoves" specification="_qHNCwOsXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    ArrayList&lt;Field> moves = new ArrayList&lt;Field>();
    for (int x = 0; x &lt;= Board.MAXFIELD; x++) {
        for (int y = 0; y &lt;= Board.MAXFIELD; y++) {
            Field empty = board.getEmptyField(x, y);
            if (empty != null) {
                moves.add(empty);
            }
        }
    }
    return moves;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHPfAesXEeaRPtCCR8m55A" name="getFutureImpact" specification="_qHOQ4esXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    int result = 0;
    ArrayList&lt;Field> moves = this.getMoves(board);
    for (Field field : moves) {
        Board myboard = board.copy();
        Board enemboard = board.copy();
        myboard.setField(field, m);
        enemboard.setField(field, m.other());
        if (myboard.isWinner(m)) {
            result += 50;
        } else if (enemboard.isWinner(m.other())) {
            result -= 50;
        }
    }
    return result;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHRUMOsXEeaRPtCCR8m55A" name="getResultMap" specification="_qHQGEOsXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    Map&lt;Field, Integer> result = new HashMap&lt;Field, Integer>();
    ArrayList&lt;Field> moves = this.getMoves(board);
    for (Field field : moves) {
        Board myboard = board.copy();
        Board enemboard = board.copy();
        myboard.setField(field, m);
        enemboard.setField(field, m.other());
        if (myboard.isWinner(m)) {
            result.put(field, new Integer(500));
        } else if (enemboard.isWinner(m.other())) {
            result.put(field, new Integer(100));
        } else {
            result.put(field, new Integer(countSurroundings(field, board, m) + getFutureImpact(myboard, m)));
        }
    //result.put(field, result.get(field) + getFutureImpact(myboard, m));
    }
    return result;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHTJYOsXEeaRPtCCR8m55A" name="countSurroundings" specification="_qHRUMesXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    int result = 0;
    for (int z = -1; z &lt;= 1; z++) {
        for (int i = -1; i &lt;= 1; i++) {
            for (int a = -1; a &lt;= 1; a++) {
                Field neighbour = board.walkField(field, i, a, z);
                //next to field of same color
                if (neighbour != null) {
                    Mark nextmark = board.getMark(neighbour);
                    if (nextmark != null &amp;&amp; nextmark.equals(m)) {
                        result++;
                    }
                } else //next to boundary
                if (neighbour == null) {
                    result++;
                }
            }
        }
    }
    return result;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHCqsOsXEeaRPtCCR8m55A" name="getName" visibility="public" method="_qHD40OsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHDRwOsXEeaRPtCCR8m55A" type="_fi-PAOsXEeaRPtCCR8m55A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHJYYesXEeaRPtCCR8m55A" name="determineMove" visibility="public" method="_qHMbsesXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHL0oOsXEeaRPtCCR8m55A" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHL0oesXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHMbsOsXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHNCwOsXEeaRPtCCR8m55A" name="getMoves" visibility="public" method="_qHOQ4OsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHNCwesXEeaRPtCCR8m55A" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qHNCwusXEeaRPtCCR8m55A"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qHNp0OsXEeaRPtCCR8m55A" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHNp0esXEeaRPtCCR8m55A" name="board"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHOQ4esXEeaRPtCCR8m55A" name="getFutureImpact" visibility="public" method="_qHPfAesXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHO38OsXEeaRPtCCR8m55A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHO38esXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHPfAOsXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHQGEOsXEeaRPtCCR8m55A" name="getResultMap" visibility="public" method="_qHRUMOsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHQGEesXEeaRPtCCR8m55A" type="_fg3WMOsXEeaRPtCCR8m55A" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHQtIOsXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHQtIesXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHRUMesXEeaRPtCCR8m55A" name="countSurroundings" visibility="public" method="_qHTJYOsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHR7QOsXEeaRPtCCR8m55A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHR7QesXEeaRPtCCR8m55A" name="field"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHSiUOsXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHSiUesXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_qG8kEesXEeaRPtCCR8m55A" name="Difficulty" visibility="public">
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qIfcMOsXEeaRPtCCR8m55A" name="getName" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIgDQOsXEeaRPtCCR8m55A" type="_fi-PAOsXEeaRPtCCR8m55A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qIgqUOsXEeaRPtCCR8m55A" name="determineMove" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIgqUesXEeaRPtCCR8m55A" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIhRYOsXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIhRYesXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qHTwcOsXEeaRPtCCR8m55A" name="ComputerPlayer" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_qHUXgOsXEeaRPtCCR8m55A" name="difficulty" visibility="private" type="_qG8kEesXEeaRPtCCR8m55A" isUnique="false"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHXa0esXEeaRPtCCR8m55A" name="ComputerPlayer" specification="_qHUXgesXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    this.difficulty = newdiff;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHYB4usXEeaRPtCCR8m55A" name="getName" specification="_qHYB4OsXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    return this.difficulty.getName() + &quot; Computer Player&quot;;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qHZ3EOsXEeaRPtCCR8m55A" name="determineMove" specification="_qHYo8OsXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    return this.difficulty.determineMove(board, m);
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHUXgesXEeaRPtCCR8m55A" name="ComputerPlayer" visibility="public" method="_qHXa0esXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHXa0OsXEeaRPtCCR8m55A" name="newdiff" type="_qG8kEesXEeaRPtCCR8m55A"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHYB4OsXEeaRPtCCR8m55A" name="getName" visibility="public" method="_qHYB4usXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHYB4esXEeaRPtCCR8m55A" type="_fi-PAOsXEeaRPtCCR8m55A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qHYo8OsXEeaRPtCCR8m55A" name="determineMove" visibility="public" method="_qHZ3EOsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHZQAOsXEeaRPtCCR8m55A" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHZQAesXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qHZQAusXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qH_F4OsXEeaRPtCCR8m55A" name="Medium" visibility="public">
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_qH_s8OsXEeaRPtCCR8m55A" name="implements" client="_qH_F4OsXEeaRPtCCR8m55A" supplier="_qG8kEesXEeaRPtCCR8m55A" contract="_qG8kEesXEeaRPtCCR8m55A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qIAUAesXEeaRPtCCR8m55A" name="getName" specification="_qH_s8esXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    return &quot;medium&quot;;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qIBiIOsXEeaRPtCCR8m55A" name="determineMove" specification="_qIAUAusXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    Map&lt;Field, Integer> result = new HashMap&lt;Field, Integer>();
    ArrayList&lt;Field> moves = new ArrayList&lt;Field>();
    for (int x = 0; x &lt;= Board.MAXFIELD; x++) {
        for (int y = 0; y &lt;= Board.MAXFIELD; y++) {
            Field empty = board.getEmptyField(x, y);
            if (empty != null) {
                moves.add(empty);
            }
        }
    }
    System.out.println(moves.size());
    for (Field field : moves) {
        Board test = board.copy();
        Board test2 = board.copy();
        test.setField(field, m);
        test2.setField(field, m.other());
        if (test.isWinner(m)) {
            result.put(field, new Integer(50));
        } else if (test2.isWinner(m.other())) {
            result.put(field, new Integer(40));
        } else {
            result.put(field, new Integer(countSurroundings(field, board, m)));
        }
    }
    int maxValue = Collections.max(result.values());
    System.out.println(maxValue);
    Iterator&lt;Map.Entry&lt;Field, Integer>> it = result.entrySet().iterator();
    while (it.hasNext()) {
        Map.Entry&lt;Field, Integer> item = it.next();
        if (item.getValue().intValue() &lt; maxValue) {
            it.remove();
        }
    }
    it = result.entrySet().iterator();
    int next = (int) (Math.random() * new Double(result.size()));
    int count = 0;
    while (it.hasNext()) {
        Map.Entry&lt;Field, Integer> item = it.next();
        if (count == next) {
            System.out.println(m.toString() + &quot; chose &quot; + item.getKey().toString());
            return item.getKey();
        }
        count++;
    }
    return null;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qICwQusXEeaRPtCCR8m55A" name="countSurroundings" specification="_qIBiIesXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    int result = 0;
    for (int z = -1; z &lt;= 0; z++) {
        for (int i = -1; i &lt;= 1; i++) {
            for (int a = -1; a &lt;= 1; a++) {
                Field neighbour = board.walkField(field, i, a, z);
                //next to field of same color
                if (neighbour != null) {
                    Mark nextmark = board.getMark(neighbour);
                    if (nextmark != null &amp;&amp; nextmark.equals(m)) {
                        result++;
                    }
                } else //next to boundary
                if (neighbour == null) {
                    result++;
                }
            }
        }
    }
    return result;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qH_s8esXEeaRPtCCR8m55A" name="getName" visibility="public" method="_qIAUAesXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIAUAOsXEeaRPtCCR8m55A" type="_fi-PAOsXEeaRPtCCR8m55A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qIAUAusXEeaRPtCCR8m55A" name="determineMove" visibility="public" method="_qIBiIOsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIA7EOsXEeaRPtCCR8m55A" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIA7EesXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIA7EusXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qIBiIesXEeaRPtCCR8m55A" name="countSurroundings" visibility="public" method="_qICwQusXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qICJMOsXEeaRPtCCR8m55A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qICJMesXEeaRPtCCR8m55A" name="field"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qICwQOsXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qICwQesXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qIElcOsXEeaRPtCCR8m55A" name="Easy" visibility="public">
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_qIElcesXEeaRPtCCR8m55A" name="implements" client="_qIElcOsXEeaRPtCCR8m55A" supplier="_qG8kEesXEeaRPtCCR8m55A" contract="_qG8kEesXEeaRPtCCR8m55A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qIFzkOsXEeaRPtCCR8m55A" name="getName" specification="_qIFMgOsXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    return &quot;easy&quot;;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qIHBsOsXEeaRPtCCR8m55A" name="determineMove" specification="_qIFzkesXEeaRPtCCR8m55A">
                <language>JAVA</language>
                <body>
    ArrayList&lt;Field> moves = new ArrayList&lt;Field>();
    for (int x = 0; x &lt;= Board.MAXFIELD; x++) {
        for (int y = 0; y &lt;= Board.MAXFIELD; y++) {
            Field empty = board.getEmptyField(x, y);
            if (empty != null) {
                moves.add(empty);
            }
        }
    }
    return moves.get((int) (Math.random() * moves.size()));
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qIFMgOsXEeaRPtCCR8m55A" name="getName" visibility="public" method="_qIFzkOsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIFMgesXEeaRPtCCR8m55A" type="_fi-PAOsXEeaRPtCCR8m55A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_qIFzkesXEeaRPtCCR8m55A" name="determineMove" visibility="public" method="_qIHBsOsXEeaRPtCCR8m55A">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIGaoOsXEeaRPtCCR8m55A" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIGaoesXEeaRPtCCR8m55A" name="board"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_qIGaousXEeaRPtCCR8m55A" name="m"/>
              </ownedOperation>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_rZLA8OsXEeaRPtCCR8m55A" name="server"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_sV2EkOsXEeaRPtCCR8m55A" name="view"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fg0S4OsXEeaRPtCCR8m55A" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_fg1hAOsXEeaRPtCCR8m55A" name="java">
        <packagedElement xmi:type="uml:Package" xmi:id="_fg2vIOsXEeaRPtCCR8m55A" name="util">
          <packagedElement xmi:type="uml:Class" xmi:id="_fg3WMOsXEeaRPtCCR8m55A" name="Map"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_jk-r4esXEeaRPtCCR8m55A" name="concurrent">
            <packagedElement xmi:type="uml:Package" xmi:id="_jk_S8OsXEeaRPtCCR8m55A" name="locks">
              <packagedElement xmi:type="uml:Class" xmi:id="_jk_S8esXEeaRPtCCR8m55A" name="Lock"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_jlELcOsXEeaRPtCCR8m55A" name="Condition"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_fi9n8OsXEeaRPtCCR8m55A" name="lang">
          <packagedElement xmi:type="uml:Class" xmi:id="_fi-PAOsXEeaRPtCCR8m55A" name="String"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jkx3kOsXEeaRPtCCR8m55A" name="Thread"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_jmUvsusXEeaRPtCCR8m55A" name="Object"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_qINvYesXEeaRPtCCR8m55A" name="Runnable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_rZM2IOsXEeaRPtCCR8m55A" name="Exception"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qIQLoesXEeaRPtCCR8m55A" name="net">
          <packagedElement xmi:type="uml:Class" xmi:id="_qIQysOsXEeaRPtCCR8m55A" name="Socket"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_rZZDYOsXEeaRPtCCR8m55A" name="ServerSocket"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qIVrMesXEeaRPtCCR8m55A" name="io">
          <packagedElement xmi:type="uml:Class" xmi:id="_qIVrMusXEeaRPtCCR8m55A" name="IOException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_sWZeMOsXEeaRPtCCR8m55A" name="BufferedReader"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_sWchgOsXEeaRPtCCR8m55A" name="BufferedWriter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_sWfk0usXEeaRPtCCR8m55A" name="InputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_sWioIOsXEeaRPtCCR8m55A" name="OutputStream"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_jk3XIOsXEeaRPtCCR8m55A" name="importedTypes">
      <packagedElement xmi:type="uml:Package" xmi:id="_jk3-MOsXEeaRPtCCR8m55A" name="ss">
        <packagedElement xmi:type="uml:Package" xmi:id="_jk3-MesXEeaRPtCCR8m55A" name="project">
          <packagedElement xmi:type="uml:Package" xmi:id="_jk3-MusXEeaRPtCCR8m55A" name="server">
            <packagedElement xmi:type="uml:Class" xmi:id="_jk4lQOsXEeaRPtCCR8m55A" name="ClientHandler"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_jlH10OsXEeaRPtCCR8m55A" name="Server"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qHkPIesXEeaRPtCCR8m55A" name="view">
            <packagedElement xmi:type="uml:Class" xmi:id="_qHk2MOsXEeaRPtCCR8m55A" name="ClientView"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_qILTIOsXEeaRPtCCR8m55A" name="Terminal"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rZctwOsXEeaRPtCCR8m55A" name="View"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_E3GXYOsZEeaRPtCCR8m55A" memberEnd="_E3G-cusZEeaRPtCCR8m55A _E3G-c-sZEeaRPtCCR8m55A">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_E3G-cOsZEeaRPtCCR8m55A" source="org.eclipse.papyrus">
        <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_E3G-cesZEeaRPtCCR8m55A" key="nature" value="UML_Nature"/>
      </eAnnotations>
      <ownedEnd xmi:type="uml:Property" xmi:id="_E3G-c-sZEeaRPtCCR8m55A" name="computerplayer" type="_qHTwcOsXEeaRPtCCR8m55A" association="_E3GXYOsZEeaRPtCCR8m55A"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_E3G-cusZEeaRPtCCR8m55A" name="difficulty" type="_qG8kEesXEeaRPtCCR8m55A" association="_E3GXYOsZEeaRPtCCR8m55A"/>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_fehM0OsXEeaRPtCCR8m55A">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_fejCAOsXEeaRPtCCR8m55A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/PapyrusJava/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusJava_PROFILES/PapyrusJava.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ffUeEOsXEeaRPtCCR8m55A">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ffVsMOsXEeaRPtCCR8m55A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/Codegen/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://Codegen_PROFILES/Codegen.profile.uml#_fPDsIBa-EearhdjjJ6cVzQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ffW6UOsXEeaRPtCCR8m55A">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ffYIcOsXEeaRPtCCR8m55A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <PapyrusJava:External xmi:id="_fhExkOsXEeaRPtCCR8m55A" name="java.util.Map" base_Classifier="_fg3WMOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_fjB5YOsXEeaRPtCCR8m55A" name="java.lang.String" base_Classifier="_fi-PAOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_jk1h8OsXEeaRPtCCR8m55A" name="java.lang.Thread" base_Classifier="_jkx3kOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_jk7okOsXEeaRPtCCR8m55A" name="ss.project.server.ClientHandler" base_Classifier="_jk4lQOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_jlCWQOsXEeaRPtCCR8m55A" name="java.util.concurrent.locks.Lock" base_Classifier="_jk_S8esXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_jlGnsOsXEeaRPtCCR8m55A" name="java.util.concurrent.locks.Condition" base_Classifier="_jlELcOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_jlKSEOsXEeaRPtCCR8m55A" name="ss.project.server.Server" base_Classifier="_jlH10OsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_jmXzAOsXEeaRPtCCR8m55A" name="java.lang.Object" base_Classifier="_jmUvsusXEeaRPtCCR8m55A"/>
  <standard:Create xmi:id="_qHWzwOsXEeaRPtCCR8m55A" base_BehavioralFeature="_qHUXgesXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_qHnScOsXEeaRPtCCR8m55A" name="ss.project.view.ClientView" base_Classifier="_qHk2MOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_qINIUOsXEeaRPtCCR8m55A" name="ss.project.view.Terminal" base_Classifier="_qILTIOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_qIPkkOsXEeaRPtCCR8m55A" name="java.lang.Runnable" base_Classifier="_qINvYesXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_qISn4OsXEeaRPtCCR8m55A" name="java.net.Socket" base_Classifier="_qIQysOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_qIXgYOsXEeaRPtCCR8m55A" name="java.io.IOException" base_Classifier="_qIVrMusXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_rZQggOsXEeaRPtCCR8m55A" name="java.lang.Exception" base_Classifier="_rZM2IOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_rZcGsOsXEeaRPtCCR8m55A" name="java.net.ServerSocket" base_Classifier="_rZZDYOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_rZfKAOsXEeaRPtCCR8m55A" name="ss.project.view.View" base_Classifier="_rZctwOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_sWb6cOsXEeaRPtCCR8m55A" name="java.io.BufferedReader" base_Classifier="_sWZeMOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_sWe9wOsXEeaRPtCCR8m55A" name="java.io.BufferedWriter" base_Classifier="_sWchgOsXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_sWiBEOsXEeaRPtCCR8m55A" name="java.io.InputStream" base_Classifier="_sWfk0usXEeaRPtCCR8m55A"/>
  <PapyrusJava:External xmi:id="_sWlEYOsXEeaRPtCCR8m55A" name="java.io.OutputStream" base_Classifier="_sWioIOsXEeaRPtCCR8m55A"/>
</xmi:XMI>
